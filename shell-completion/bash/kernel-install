# kernel-install(8) completion                                   -*- shell-script -*-
#
# This file is part of systemd.
#
# Copyright 2013 Kay Sievers
#
# systemd is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# systemd is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with systemd; If not, see <http://www.gnu.org/licenses/>.

__contains_word () {
        local word=$1; shift
        for w in $*; do [[ $w = $word ]] && return 0; done
        return 1
}

_kernel_install() {
        local i verb comps
        local cur=${COMP_WORDS[COMP_CWORD]} prev=${COMP_WORDS[COMP_CWORD-1]}
        local OPTS='-h --help'

        local -A VERBS=(
                [ADD]='add'
                [REMOVE]='remove'
        )

        for ((i=0; $i <= $COMP_CWORD; i++)); do
                if __contains_word "${COMP_WORDS[i]}" ${VERBS[*]} &&
                 ! __contains_word "${COMP_WORDS[i-1]}" ${OPTS[ARG]}; then
                        verb=${COMP_WORDS[i]}
                        break
                fi
        done

        if [[ -z $verb  && $cur = -* ]]; then
                COMPREPLY=( $(compgen -W '${OPTS[*]}' -- "$cur") )
                return 0
        fi

        if [[ -z $verb ]]; then
                comps=${VERBS[*]}

        elif __contains_word "$verb" ${VERBS[ADD]}; then
                if [[ $prev = "$verb" ]]; then
                        comps=$(cd /lib/modules; echo [0-9]*)
                elif [[ $prev = [0-9]* ]]; then
                        comps=$(echo /boot/vmlinuz-$prev*)
                fi

        elif __contains_word "$verb" ${VERBS[REMOVE]}; then
                comps=$(cd /lib/modules; echo [0-9]*)

        fi

        COMPREPLY=( $(compgen -W '$comps' -- "$cur") )
        return 0
}

complete -F _kernel_install kernel-install
