
- mounts might take time, need to be executed asynchronously in a forked process?

- need gc for active jobs that nothing cares for

- need gc for units that are not referenced anymore

- refreshing of units (i.e. reload config files)

- dbusification

- cgroupsification

- udev hookup

- snapshot system

- hookup with battery status, suspend/resume

- add a job mode which shuts everything down but what is requested

- implement priv dropping

- allow to disable priv dropping for hook scripts from fragment

- implement timer

- implement mount/automount

- more process attributes: cpu affinity, cpu scheduling

- create session/pgroup for child processes? handle input on console properly? interactive fsck? interactive luks password?

- fs namespaces

- templating/instances

- verify fragment data after loading: refuse cycles on yourself, service units contradicting, more than one Start executable, ...

- automatically delete stale unix sockets

- .socket needs to be notified not only by .service state changes, but also unsuccessful start jobs

- we probably cannot use glibc's syslog() for logging, since it
  presumably uses the logging socket in blocking mode which might
  trigger a deadlock if syslog does not process the socket anymore
  (maybe because it is restarted) and the socket buffer is full.

- in udev/mount if properties change we need to delete the old
  settings and install the new settings. Deleting the old settings is
  currently missing.

- ability to kill services? i.e. in contrast to stopping them, go directly
  into killing mode?

- restart-on-success, restart-on-failure, restart-on-abort
